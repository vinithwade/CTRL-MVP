version: '3.8'

services:
  # Main application
  ctrl-mvp:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - FRONTEND_URL=http://localhost:3000
      # Add your environment variables here
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - MONGODB_URI=${MONGODB_URI}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN:-http://localhost:3000}
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ctrl-network

  # Development version with hot reload
  ctrl-mvp-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - FRONTEND_URL=http://localhost:3001
    env_file:
      - .env
    volumes:
      - ./packages/frontend/src:/app/packages/frontend/src
      - ./packages/backend/src:/app/packages/backend/src
      - ./packages/shared:/app/packages/shared
    restart: unless-stopped
    networks:
      - ctrl-network
    profiles:
      - dev

  # Database (MongoDB) - uncomment if you need a database
  # mongodb:
  #   image: mongo:6.0
  #   ports:
  #     - "27017:27017"
  #   environment:
  #     - MONGO_INITDB_ROOT_USERNAME=admin
  #     - MONGO_INITDB_ROOT_PASSWORD=password
  #   volumes:
  #     - mongodb_data:/data/db
  #   restart: unless-stopped
  #   networks:
  #     - ctrl-network

  # Redis for caching (optional)
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped
  #   networks:
  #     - ctrl-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/ssl:/etc/nginx/ssl
    depends_on:
      - ctrl-mvp
    restart: unless-stopped
    networks:
      - ctrl-network
    profiles:
      - production

networks:
  ctrl-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: 